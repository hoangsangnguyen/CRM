@model CRM.Admin.Models.ContactAddEditModel
@using CRM.Admin;
@using Kendo.Mvc.UI;
@{
    ViewBag.Title = Caching.GetValue("Contact.Add");
}

@section styles
{
    @Styles.Render("~/Content/Multiorg_kendo_css")
    <link href="~/Content/style.kendo.edit.css" rel="stylesheet" />
    <link href="~/Content/css.edit.css" rel="stylesheet" />
    <style type="text/css">
        #imgLogo, #imgUploaded {
            max-height: 180px;
        }

        .profile-info-row select {
            width: 99%;
            height: 24px;
            border: 0;
            padding: 2px 5px !important;
        }
    </style>
}

<div class="breadcrumbs" id="breadcrumbs">
    <script type="text/javascript">
        try { multi.settings.check('breadcrumbs', 'fixed') } catch (e) { }
    </script>
    <ul class="breadcrumb">
        <li><i class="multi-icon fa fa-home icon_house"></i></li>
        <li><a href="#">@Caching.GetValue("Global.Home")</a></li>
        <li><a title="" href="/admin/contact">@Caching.GetValue("Contact.Contact")</a></li>
        <li class="active">@Caching.GetValue("Contact.Add")</li>
    </ul>
    <!-- /.breadcrumb -->
    <div class="nav-search" id="nav-search">
        <form class="form-search">
            <span class="input-icon">
                <input placeholder="@Caching.GetValue("Global.Search")" class="nav-search-input" id="nav-search-input" autocomplete="off" type="text">
                <i class="multi-icon fa icon_search nav-search-icon"></i>
            </span>
        </form>
    </div>
    <!-- /.nav-search -->
</div>
<div class="page-content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ContactId)
        <div class="page-header">
            <ul class="btn-top pull-right">
                <li><input type="submit" class="save_big" value="@Caching.GetValue("Global.Save")" /></li>
                <li><input type="button" class="cancel_big" value="@Caching.GetValue("Global.Cancel")" onclick="cancel();" /></li>
            </ul>
            <h1>
                @Caching.GetValue("Contact.Add")
                <!--<small> <i class="multi-icon fa arrow_triangle-right"></i> bootstrap grid sizing </small>-->
            </h1>

        </div>
    <!-- /.page-header -->
    <!--  PAGE CONTENT BEGINS -->
        <div class="center mt60">
            <div class="row">
                <div class="col-xs-12">
                    <div class="user-profile row">
                        @*<div class="col-xs-12 col-sm-4 center">
                            <div>
                                <span class="profile-picture">
                                    <img id="imgLogo" class="editable img-responsive  editable-empty" src="@Url.Content("~/images/No_image_available_no_border.png")" alt="@Model.FirstName" />
                                    <img id="imgUploaded" class="editable img-responsive  editable-empty" src="" alt="Add tenant" style="display:none" />
                                </span>
                                <div class="space-12"></div>
                            </div>
                            <div class="space-6"></div>
                            <div class="profile-user-info profile-user-info-striped">

                                <div class="profile-info-row">
                                    <div class="profile-info-name w100">@Html.LabelFor(x => x.CompanyLogo)</div>
                                    <div class="profile-info-value text-left">
                                        @(Html.Kendo().Upload()
                                            .Multiple(false)
                                    .Name("file")
                                            .Async(a => a
                                                .Save("SaveLogoUpload", "Tenant")
                                                .Remove("RemoveLogoUpload", "Tenant")
                                                .AutoUpload(true)
                                            )
                                    .Events(events => events
                                            .Select("onSelect")
                                            .Success("onSuccess")
                                        )
                                        )
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name w100">@Html.LabelFor(x => x.Website)</div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.Website, new { @class = "edit_input" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name w100"><i class="middle multi-icon fa social_twitter_circle bigger-190 light-blue"></i></div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.TwitterURL, new { @class = "edit_input" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name w100"><i class="middle multi-icon fa social_facebook_circle  bigger-190 blue"></i></div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.FacebookURL, new { @class = "edit_input" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name w100"> <i class="middle multi-icon fa social_linkedin_circle  bigger-190 blue"></i></div>
                                    <div class="profile-info-value text-left ">
                                        @Html.TextBoxFor(model => model.LinkedURL, new { @class = "edit_input" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name w100"> <i class="middle multi-icon fa social_googleplus_circle bigger-190 red"></i></div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.GoogleplusURL, new { @class = "edit_input" })
                                    </div>
                                </div>
                            </div>
                            <div class="space-6"></div>
                           

                        </div>*@

                        <div class="col-xs-12 col-sm-12">
                          
                            <div class="profile-user-info profile-user-info-striped">
                                <div class="profile-info-row">
                                    <div class="profile-info-name"> @Html.LabelFor(model => model.Gender) </div>
                                    <div class="profile-info-value text-left bolder">
                                       @Html.DropDownList("Gender", Model.AvailableGender)
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name"> @Html.LabelFor(model => model.FirstName) <span class="bigger-120 red">*</span></div>
                                    <div class="profile-info-value text-left bolder">
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "edit_input bolder" })
                                        @Html.ValidationMessageFor(model => Model.FirstName, null, new { @class = "mesValidate" })
                                        <div id="message" class="mesValidate"></div>
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name"> @Html.LabelFor(model => model.LastName) <span class="bigger-120 red">*</span></div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "edit_input" })
                                        @Html.ValidationMessageFor(model => Model.LastName, null, new { @class = "mesValidate" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name"> @Html.LabelFor(model => model.Email) <span class="bigger-120 red">*</span></div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.Email, new { @class = "edit_input" })
                                        @Html.ValidationMessageFor(model => Model.Email, null, new { @class = "mesValidate" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name"> @Html.LabelFor(model => model.ContactPhone)</div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.MobilePhone, new { @class = "edit_input" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name"> @Html.LabelFor(model => model.Address) </div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBoxFor(model => model.Address, new { @class = "edit_input" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name">@Html.LabelFor(model => model.Active)</div>
                                    <div class="profile-info-value text-left">
                                        @Html.CheckBoxFor(model => model.Active, new { @class = "edit_input" })
                                    </div>
                                </div>
                                <div class="profile-info-row">
                                    <div class="profile-info-name">@Html.LabelFor(model =>model.CustomerId)</div> 
                                    <div class="profile-info-value text-left">
                                        @Html.DropDownList("CustomerId", Model.AvailableCustomer, Caching.GetValue("Contact.SelectCustomer"))
                                        @Html.ValidationMessageFor(model => Model.CustomerId, null, new { @class = "mesValidate" })
                                    </div>
                                </div>
                                
                                <div class="profile-info-row">
                                    <div class="profile-info-name">@Html.LabelFor(x => x.CreatedDate)</div>
                                    <div class="profile-info-value text-left">
                                        @Html.TextBox("createdDate", String.Format("{0:d}", DateTime.Now), new { @class = "edit_input", @disabled = "disabled" })
                                    </div>
                                </div>
                               
                            </div>
                            <div class="space-6"></div>
                            
                            
                            <div class="align-right">
                                <div class="wr_btn_action">
                                    <input type="button" class="cancel_big" value="@Caching.GetValue("Global.Cancel")" onclick="cancel();" />
                                </div>
                                <div class="wr_btn_action">
                                    <input type="submit" class="save_big" value="@Caching.GetValue("Global.Save")" />
                                </div>
                            </div>
                            <div id="someHiddenDiv" style="display: none;">Working...</div>
                        </div>
                        <!-- end box table content-->

                    </div>
                </div>
            </div>
        </div>
    <!-- PAGE CONTENT ENDS-->
    <!-- /.row-->
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/Multiorg_kendo_script")
    <script>

        var check = true;
        $(document).ready(function () {
            $("form").submit(function () {
                if (!check)
                    return false;
                else {

                }
            });

            //$("#TenantNameAlias").change(function () {
            //    var alias = $("#TenantNameAlias").val();
            //    if (alias.length > 2) {
            //        var lengErrAlias = $('#cAlias')[0].innerText;
            //        if (lengErrAlias.length < 1) {
            //            $("#message").html("<img src='/images/ajax-loader.gif' /> checking...");
            //            var alias = $("#TenantNameAlias").val();
            //            $.ajax({
            //                type: 'GET',
            //                url: '/Admin/Tenant/CheckAlias',
            //                data: { alias: alias },
            //                success: function (data) {
            //                    if (data == "True") {
            //                        check = true;
            //                        $("#message").html("<img src='/images/tick.png' /> <span style=\"color:#0B972D;\">Alias available!</span>");
            //                        $("#DbName").val("MultiOrg_" + alias);
            //                    }
            //                    else {
            //                        check = false;
            //                        $("#message").html("<img src='/images/cross.png' /> Alias already taken!");
            //                    }
            //                },
            //                error: function () { }
            //            });
            //        }
            //        else {
            //            $("#message").empty();
            //        }
            //    }
            //    else {
            //        $("#message").html("<img src='/images/cross.png' /> Alias not available!");
            //    }
            //});
        });

        // select image
        function onSelect(e) {
            $.each(e.files, function (index, value) {
                checkImageUpload(value);
            });
        };

        // only upload image file
        function checkImageUpload(input) {
            var blnValid = false;
            var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
            for (var j = 0; j < _validFileExtensions.length; j++) {
                var sCurExtension = _validFileExtensions[j];
                if (input.extension.toLowerCase() == sCurExtension.toLowerCase()) {
                    blnValid = true;
                }
            }

            if (!blnValid) {
                alert("Sorry, " + input.name + " is invalid, allowed extensions are: " + _validFileExtensions.join(", "));
                return false;
            }
        }

        // upload success
        function onSuccess(e) {

            var responseTxt = jQuery.parseJSON(e.XMLHttpRequest.responseText);

            //var status = responseTxt.Status;
            var srcValue = responseTxt.PictureUrl;

            if (srcValue != null) {
                $("#imgLogo").hide();
                $("#imgUploaded").attr('src', srcValue).show();
            } else {
                //$("#imgUploaded").attr('src', srcValue);
                //$("#imgLogo").hide();
            }

        }

        //event when click remove file
        function onRemove(e) {
            //$(".k-upload-files.k-reset").remove();
        }

        function cancel() {
            var siteUrl = "/admin/contact/";
            window.location = siteUrl;
        }

    </script>
    @Scripts.Render("~/bundles/Multiorg_validate_script")
}